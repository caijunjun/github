<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<!-- 日志路径(相对路径)，如果部署到linux上的tomcat下，会输出到tomcat/bin目录下 -->
	<property name="log.path" value="logs" />
	<!-- 模块名称，影响日志文件名 -->
	<property name="log.moduleName" value="utils" />
	<!-- 日志滚动时间(日) -->
	<property name="log.maxHistory" value="60" />
	<!-- mb -->
	<property name="log.totalSizeCap" value="10" />

	<!-- 控制台输出 -->
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- 普通日志文件输出 -->
	<appender name="file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.path}/${log.moduleName}.log</File>
		<!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.path}/backup/${log.moduleName}.log.%d{yyyy-MM-dd}
			</FileNamePattern>
			<!-- 设置日志的滚动时间 -->
			<maxHistory>${log.maxHistory}</maxHistory>
			<totalSizeCap>${log.totalSizeCap}MB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志输出的文件的格式 -->
		<encoder>
			<!--格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS}|%-5level|%thread|%logger{56}|%msg%n</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 错误日志文件输出 -->
	<appender name="errorFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.path}/${log.moduleName}Error.log</File>
		<!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.path}/backup/${log.moduleName}Error.log.%d{yyyy-MM-dd}
			</FileNamePattern>
			<!-- 设置日志的滚动时间 -->
			<maxHistory>${log.maxHistory}</maxHistory>
			<totalSizeCap>${log.totalSizeCap}MB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志输出的文件的格式 -->
		<encoder>
			<!--格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS}|%-5level|%thread|%logger{56}|%msg%n</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<!-- 只有是error级别的才打印 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter"> 
            <level>ERROR</level>  
            <onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  
        </filter>   
	</appender>

	<root level="INFO">
		<appender-ref ref="stdout" />
		<appender-ref ref="file" />
		<appender-ref ref="errorFile" />
	</root>
</configuration>